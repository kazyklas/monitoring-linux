---

- hosts: all
  become: yes
  become_user: root
  gather_facts: false

  tasks:

    - name: Include proxies
      include_vars: 'proxies.yaml'

    - name: Add SSH key from GitHub to authorized_keys
      authorized_key:
        user: "{{ item.username }}"
        key: "{{ item.ssh_key }}"
        state: present
      with_items: "{{ github_users }}"
      loop:
      - username: root
        ssh_key: "{{ lookup('url', 'https://github.com/tklas-dtml.keys') }}"

    - name: Create a ssl directory if it does not exist
      ansible.builtin.file:
        path: /opt/nginx/etc/letsencrypt/live/home.kazyklas.cz
        state: directory
        mode: '0755'

    - name: Copy ssl certificates with owner and permissions
      ansible.builtin.copy:
        src: /etc/letsencrypt/live/home.kazyklas.cz/
        dest: /opt/nginx/etc/letsencrypt/live/home.kazyklas.cz/
        owner: root
        group: root
        mode: '0644'
    
    - name: Create an nginx directory if it does not exist
      ansible.builtin.file:
        path: /opt/nginx/etc/nginx/conf.d
        state: directory
        mode: '0755'

    - name: Copy nginx conf with owner and permissions
      ansible.builtin.copy:
        src: ./default.conf
        dest: /opt/nginx/etc/nginx/conf.d/default.conf
        owner: root
        group: root
        mode: '0644'

    - name: Start nginx container
      docker_container:
        name: nginx
        hostname: nginx
        image: nginx
        pull: yes
        state: started
        restart: yes
        network_mode: host
        restart_policy: "unless-stopped"
        volumes:
          - "/opt/nginx/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
          - "/opt/nginx/etc/letsencrypt/live/home.kazyklas.cz:/etc/letsencrypt/live/home.kazyklas.cz:rw"

    - name: Start Oauth container 
      docker_container:
        name: "{{ item.CONTAINER_NAME }}"
        hostname: oauth
        image: quay.io/oauth2-proxy/oauth2-proxy
        pull: yes
        state: started
        restart: yes
        restart_policy: "unless-stopped"
        network_mode: host
        env:
          OAUTH2_PROXY_AZURE_TENANT: "{{ AZURE_TENAT }}"
          OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/{{ AZURE_TENAT }}/v2.0"
          OAUTH2_PROXY_PROVIDER: "oidc"
          OAUTH2_PROXY_UPSTREAMS: "{{ item.OAUTH2_PROXY_UPSTREAMS }}" 
          OAUTH2_PROXY_SESSION_COOKIE_MINIMAL: "true"
          OAUTH2_PROXY_EMAIL_DOMAINS: "*"
          OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
          OAUTH2_PROXY_COOKIE_SECRET: "{{ COOKIE_SECRET }}" 
          OAUTH2_PROXY_CLIENT_ID: "{{ CLIENT_ID }}"
          OAUTH2_PROXY_CLIENT_SECRET: "{{ CLIENT_SECRET }}"
          OAUTH2_PROXY_REDIRECT_URL: "{{ item.OAUTH2_PROXY_REDIRECT_URL }}"
          OAUTH2_PROXY_SCOPE: "openid email"
          OAUTH2_PROXY_HTTP_ADDRESS: "{{ item.OAUTH2_PROXY_HTTP_ADDRESS }}"
      loop: "{{ proxies }}"
